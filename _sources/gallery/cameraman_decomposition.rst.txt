
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/cameraman_decomposition.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_cameraman_decomposition.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_cameraman_decomposition.py:


Wavelet Decomposition of an Image
======================================

This is a simple example which demonstrates how 
``cr.sparse.wt.dwt2`` function can be used to 
perform 2D wavelet decomposition.

Its interface is identical to the corresponding function
in PyWavelets library.

This example is adapted from 
`PyWavelets documentation <https://pywavelets.readthedocs.io/en/latest/>`_.

.. GENERATED FROM PYTHON SOURCE LINES 17-18

Configure JAX to work with 64-bit floating point precision. 

.. GENERATED FROM PYTHON SOURCE LINES 18-20

.. code-block:: default

    from jax.config import config
    config.update("jax_enable_x64", True)







.. GENERATED FROM PYTHON SOURCE LINES 21-22

Let's import necessary libraries 

.. GENERATED FROM PYTHON SOURCE LINES 22-30

.. code-block:: default

    import jax.numpy as jnp
    # CR-Wavelets libraries
    import cr.wavelets as wt
    # We use PyWavelets only for sample data
    import pywt.data
    # Plotting
    import matplotlib.pyplot as plt








.. GENERATED FROM PYTHON SOURCE LINES 31-32

Load the Cameraman image

.. GENERATED FROM PYTHON SOURCE LINES 32-33

.. code-block:: default

    original = pywt.data.camera()







.. GENERATED FROM PYTHON SOURCE LINES 34-35

Perform wavelet decomposition 

.. GENERATED FROM PYTHON SOURCE LINES 35-36

.. code-block:: default

    coeffs2 = wt.dwt2(original, 'bior1.3')







.. GENERATED FROM PYTHON SOURCE LINES 37-38

Split the coefficients tuple into individual parts

.. GENERATED FROM PYTHON SOURCE LINES 38-39

.. code-block:: default

    LL, (LH, HL, HH) = coeffs2







.. GENERATED FROM PYTHON SOURCE LINES 40-41

Plot the decomposition

.. GENERATED FROM PYTHON SOURCE LINES 41-52

.. code-block:: default

    titles = ['Approximation', ' Horizontal detail',
              'Vertical detail', 'Diagonal detail']
    fig = plt.figure(figsize=(12, 3))
    for i, a in enumerate([LL, LH, HL, HH]):
        ax = fig.add_subplot(1, 4, i + 1)
        ax.imshow(a, interpolation="nearest", cmap=plt.cm.gray)
        ax.set_title(titles[i], fontsize=10)
        ax.set_xticks([])
        ax.set_yticks([])

    fig.tight_layout()



.. image-sg:: /gallery/images/sphx_glr_cameraman_decomposition_001.png
   :alt: Approximation,  Horizontal detail, Vertical detail, Diagonal detail
   :srcset: /gallery/images/sphx_glr_cameraman_decomposition_001.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.576 seconds)


.. _sphx_glr_download_gallery_cameraman_decomposition.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: cameraman_decomposition.py <cameraman_decomposition.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: cameraman_decomposition.ipynb <cameraman_decomposition.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
